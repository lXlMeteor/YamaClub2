import { Button } from "@mui/material";
import styles from "@/app/statics/styles/reactionButtons.module.css";
import { Zen_Maru_Gothic } from "next/font/google";

// Google„Éï„Ç©„É≥„Éà„ÅÆË®≠ÂÆö
const ZenMaruGothicFont = Zen_Maru_Gothic({
  weight: "900",
  subsets: ["latin"],
});

// **ÂÖ±ÈÄö„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥„ÅÆÂûãÂÆöÁæ©**
type ReactionButtonProps = {
  count: number;
  currentPostId: string;
  type: "EMPATHY" | "LOL" | "BIGLOL";
  updateReactionCount: (postId: string, type: "EMPATHY" | "LOL" | "BIGLOL") => void;
  label: string;
  emoji: string;
};

// **ÂÖ±ÈÄö„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà**
const ReactionButton: React.FC<ReactionButtonProps> = ({ count, currentPostId, type, updateReactionCount, label, emoji }) => {
  return (
    <Button onClick={() => updateReactionCount(currentPostId, type)}>
      <div className={`${styles.reactionButton} ${ZenMaruGothicFont.className}`}>
        {label}:
        <p>{emoji} {count}</p>
      </div>
    </Button>
  );
};

// **EmpathyButton**
type EmpathyButtonProps = {
  EMPATHY: number;
  currentPostId: string;
  updateReactionCount: (postId: string, type: "EMPATHY" | "LOL" | "BIGLOL") => void;
};

export function EmpathyButton({ EMPATHY, currentPostId, updateReactionCount }: EmpathyButtonProps) {
  return (
    <ReactionButton
      count={EMPATHY}
      currentPostId={currentPostId}
      type="EMPATHY"
      updateReactionCount={updateReactionCount}
      label="ÂÖ±ÊÑü„Åó„Åü„Çà"
      emoji="ü§ù"
    />
  );
}

// **LolButton**
type LolButtonProps = {
  LOL: number;
  currentPostId: string;
  updateReactionCount: (postId: string, type: "EMPATHY" | "LOL" | "BIGLOL") => void;
};

export function LolButton({ LOL, currentPostId, updateReactionCount }: LolButtonProps) {
  return (
    <ReactionButton
      count={LOL}
      currentPostId={currentPostId}
      type="LOL"
      updateReactionCount={updateReactionCount}
      label="ÊàêÈï∑„Åó„Åü„Å≠ÔºÅ"
      emoji="üå±"
    />
  );
}

// **BigLolButton**
type BigLolButtonProps = {
  BIGLOL: number;
  currentPostId: string;
  updateReactionCount: (postId: string, type: "EMPATHY" | "LOL" | "BIGLOL") => void;
};

export function BigLolButton({ BIGLOL, currentPostId, updateReactionCount }: BigLolButtonProps) {
  return (
    <ReactionButton
      count={BIGLOL}
      currentPostId={currentPostId}
      type="BIGLOL"
      updateReactionCount={updateReactionCount}
      label="„Åæ„Åò„Åä„ÇÇ„Çç„ÅÑ"
      emoji="üòÇ"
    />
  );
}
